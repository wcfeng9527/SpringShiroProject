<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 缓存管理器 使用Ehcache实现 -->
	
	<bean id="permissionClientServiceImpl"
		class="com.shijie99.permission.client.service.PermissionClientServiceImpl">
		<constructor-arg name="host" value="${permissionClient.host}" />
		<constructor-arg name="port" value="${permissionClient.port}" />
		<constructor-arg name="systemId" value="${permissionClient.systemid}" />
	</bean>
	<bean id="permissionClientBaseService" class="com.shijie99.permission.client.service.PermissionClientBaseService"/>
	
	
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.shijie99.permission.client.shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.shijie99.permission.client.shiro.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/> 
        <property name="permissionService" ref="permissionClientServiceImpl"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/> 
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="com.shijie99.permission.client.commons.Quartz2SessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="com.shijie99.permission.client.commons.LoginFormAuthenticationFilter">
        <property name="usernameParam" value="${permissionClient.login.usernameParam}"/>
        <property name="passwordParam" value="${permissionClient.login.passwordParam}"/>
        <property name="loginUrl" value="${permissionClient.login.unAuthAction}"/>
    </bean>

	<bean id="sysUserFilter" class="com.shijie99.permission.client.shiro.SysUserFilter">
    	<property name="permissionService" ref="permissionClientServiceImpl"/>
    </bean>
    
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter"> 
        <!-- <property name="redirectUrl" value="${permissionClient.logoutRedirectUrl}" />  -->
    </bean>
    
    <bean id="kickoutSessionControlFilter"   
		class="com.shijie99.permission.client.shiro.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="cacheManager"/> 
	    <property name="sessionManager" ref="sessionManager"/>  
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="${permissionClient.loginPersion.maxSession}"/>  
	    <property name="kickoutUrl" value="${permissionClient.loginPersion.kickoutUrl}"/>
	    <property name="unCheckNames" value="￥{permissionClient.loginPersion.unCheckNames}" />
	</bean>  
    
 

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>